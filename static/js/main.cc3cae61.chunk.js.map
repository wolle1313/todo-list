{"version":3,"sources":["components/errors.js","components/userInputs.js","components/tasks.js","components/info.js","components/sortBtns.js","components/App.js","index.js"],"names":["ErrorDate","props","txtContent","error","format","choosen","past","className","ErrorName","length","repeat","UserInputs","handleNameInput","e","target","value","setState","name","handleDateInput","date","handleCheckboxChange","important","state","handleDescInput","description","handleSelectChange","category","handleBtnAdd","validation","taskValidation","tasks","correct","click","errors","inpName","inpDate","findIndex","el","dateNumber","Date","getTime","parseInt","currDate","console","log","id","htmlFor","type","this","onInput","onChange","checked","onClick","Component","CurrentTask","task","betterDate","slice","clickFinished","clickRemove","PastTask","pastTask","finishDate","Tasks","renderTasks","tasked","sort","a","b","values","map","currentSort","filter","sortTasks","renderPastTasks","pastTasks","Info","Menu","SortBtns","clickImportant","clickMenu","App","handleButtonClick","counter","removeTask","prev","index","splice","taskFinished","today","toLocaleString","handleClickImportant","classList","toggle","fetch","then","response","json","document","querySelectorAll","forEach","tab","remove","add","bind","handleMenuClick","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cc3cae61.chunk.js","sourcesContent":["const ErrorName = (props) => {\r\n  function error() {\r\n    if (!props.error.length) {\r\n      return \"nazwa powinna mieć co najmniej 3 znaki\";\r\n    } else if (!props.error.repeat) {\r\n      return \"nazwa nie powinna się powtarzać\";\r\n    }\r\n  }\r\n  const txtContent = error();\r\n  return <>{txtContent ? <span className=\"error\">{txtContent}</span> : null}</>;\r\n};\r\n\r\nconst ErrorDate = (props) => {\r\n  function error() {\r\n    if (!props.error.format) {\r\n      return \"data nie ma odpowiedniego formatu\";\r\n    } else if (!props.error.choosen) {\r\n      return \"wybierz datę\";\r\n    } else if (!props.error.past) {\r\n      return \"podana data jest przeszła\";\r\n    }\r\n  }\r\n  const txtContent = error();\r\n  return <>{txtContent ? <span className=\"error\">{txtContent}</span> : null}</>;\r\n};\r\n\r\nexport default ErrorName;\r\nexport { ErrorDate };\r\n","import React, { Component } from \"react\";\r\nimport ErrorName, { ErrorDate } from \"./errors\";\r\nclass UserInputs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      date: \"\",\r\n      description: \"\",\r\n      category: \"osobiste\",\r\n      important: false,\r\n      errors: {\r\n        name: {\r\n          length: true,\r\n          repeat: true,\r\n        },\r\n        date: {\r\n          choosen: true,\r\n          format: true,\r\n          past: true,\r\n        },\r\n      },\r\n    };\r\n  }\r\n  taskValidation(inpName, inpDate, tasks) {\r\n    let name = {\r\n      length: false,\r\n      repeat: false,\r\n    };\r\n    let date = {\r\n      format: false,\r\n      length: false,\r\n      past: false,\r\n    };\r\n    let correct = false;\r\n    if (inpName.length > 2) {\r\n      name.length = true;\r\n      if (tasks.findIndex((el) => el.name === inpName) === -1) {\r\n        name.repeat = true;\r\n      }\r\n    }\r\n    const dateNumber = new Date(inpDate).getTime();\r\n    if (parseInt(dateNumber)) {\r\n      date.choosen = true;\r\n      if (inpDate.length === 16) {\r\n        date.format = true;\r\n        const currDate = new Date().getTime();\r\n        console.log(`${dateNumber} - ${currDate}`);\r\n        if (parseInt(dateNumber) > parseInt(currDate)) {\r\n          date.past = true;\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      date.past === true &&\r\n      date.format === true &&\r\n      date.choosen === true &&\r\n      name.repeat === true &&\r\n      name.length === true\r\n    ) {\r\n      correct = true;\r\n    }\r\n    return {\r\n      name,\r\n      date,\r\n      correct,\r\n    };\r\n  }\r\n  handleNameInput = (e) => {\r\n    if (e.target.value.length < 50) {\r\n      this.setState({ name: e.target.value });\r\n    }\r\n  };\r\n  handleDateInput = (e) => {\r\n    this.setState({ date: e.target.value });\r\n  };\r\n  handleCheckboxChange = () => {\r\n    this.setState({ important: !this.state.important });\r\n  };\r\n  handleDescInput = (e) => {\r\n    if (e.target.value.length < 100) {\r\n      this.setState({ description: e.target.value });\r\n    }\r\n  };\r\n  handleSelectChange = (e) => {\r\n    this.setState({ category: e.target.value });\r\n  };\r\n  handleBtnAdd = () => {\r\n    const { name, date, category, important, description } = this.state;\r\n    const validation = this.taskValidation(name, date, this.props.tasks);\r\n    if (validation.correct) {\r\n      this.props.click(name, date, category, important, description);\r\n      this.setState({\r\n        name: \"\",\r\n        date: \"\",\r\n        description: \"\",\r\n        category: \"osobiste\",\r\n        important: false,\r\n      });\r\n    }\r\n    this.setState({\r\n      errors: {\r\n        name: validation.name,\r\n        date: validation.date,\r\n      },\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"inputs\">\r\n        <div id=\"nameInput\">\r\n          <label htmlFor=\"nameTask\">Nazwa zadania</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"nameTask\"\r\n            value={this.state.name}\r\n            onInput={this.handleNameInput}\r\n          />\r\n          <ErrorName error={this.state.errors.name} />\r\n        </div>\r\n        <div id=\"descriptionInput\">\r\n          <label htmlFor=\"descTask\">Opis (opcjonalny)</label>\r\n          <textarea\r\n            type=\"text\"\r\n            id=\"descTask\"\r\n            value={this.state.description}\r\n            onInput={this.handleDescInput}\r\n          />\r\n        </div>\r\n        <div id=\"selectTask\">\r\n          <label htmlFor=\"selectTask\">Kategoria</label>\r\n          <div>\r\n            <select\r\n              id=\"selectTask\"\r\n              value={this.state.category}\r\n              onChange={this.handleSelectChange}\r\n            >\r\n              <option value=\"osobiste\">osobiste</option>\r\n              <option value=\"praca\">praca</option>\r\n              <option value=\"dom\">dom</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"dateTask\">Data</label>\r\n          <input\r\n            type=\"datetime-local\"\r\n            id=\"dateTask\"\r\n            value={this.state.date}\r\n            onInput={this.handleDateInput}\r\n          />\r\n          <ErrorDate error={this.state.errors.date} />\r\n        </div>\r\n        <div id=\"checkPrio\">\r\n          <input\r\n            id=\"prioBox\"\r\n            type=\"checkbox\"\r\n            checked={this.state.important}\r\n            onChange={this.handleCheckboxChange}\r\n          />\r\n          <label htmlFor=\"prioBox\">Priorytet</label>\r\n        </div>\r\n        <button onClick={this.handleBtnAdd}>DODAJ ZADANIE</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserInputs;\r\n","const CurrentTask = (props) => {\r\n  const { name, date, category, important, description } = props.task;\r\n  const betterDate = `${date.slice(11, 13)}:${date.slice(14, 16)} ${date.slice(\r\n    8,\r\n    10\r\n  )}-${date.slice(5, 7)}-${date.slice(0, 4)}`;\r\n  return (\r\n    <div className={important ? \"task imp\" : \"task\"}>\r\n      <h1>{name}</h1>\r\n      <h3>{description}</h3>\r\n      <h2 className=\"todo\">Termin ukończenia: {betterDate}</h2>\r\n      <span className={\"category \" + category}>{category}</span>\r\n      {important ? <h2 className=\"important\">Ważne</h2> : null}\r\n      <button\r\n        className=\"finishTask\"\r\n        onClick={() => props.clickFinished(props.task)}\r\n      >\r\n        Zrobione!\r\n      </button>\r\n      <button\r\n        className=\"removeTask\"\r\n        onClick={() => props.clickRemove(name, false)}\r\n      >\r\n        X\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PastTask = (props) => {\r\n  const { name, date, finishDate } = props.pastTask;\r\n  const betterDate = `${date.slice(8, 10)}-${date.slice(5, 7)}-${date.slice(\r\n    0,\r\n    4\r\n  )} ${date.slice(11, 13)}:${date.slice(14, 16)} `;\r\n  return (\r\n    <div className=\"task pastTask\">\r\n      <h1>{name}</h1>\r\n      <h2>Termin ukończenia: {betterDate}</h2>\r\n      <h2>Data wykonania: {finishDate}</h2>\r\n      <button\r\n        className=\"removeTask\"\r\n        onClick={() => props.clickRemove(name, true)}\r\n      >\r\n        X\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Tasks = (props) => {\r\n  function sortTasks(tasks) {\r\n    let tasked = tasks.sort((a, b) => {\r\n      const values = [a.date, b.date].map(\r\n        (el) =>\r\n          `${el.slice(0, 4)}${el.slice(5, 7)}${el.slice(8, 10)}${el.slice(\r\n            11,\r\n            13\r\n          )}${el.slice(14, 16)}`\r\n      );\r\n      return values[0] - values[1];\r\n    });\r\n    if (props.currentSort !== \"wszystko\") {\r\n      tasked = tasked.filter((el) => el.category === props.currentSort);\r\n    }\r\n    if (props.important === true) {\r\n      tasked = tasked.filter((el) => el.important === true);\r\n    }\r\n    return tasked;\r\n  }\r\n  const sortedTasks = sortTasks(props.tasks);\r\n  const renderTasks = sortedTasks.map((task) => (\r\n    <CurrentTask\r\n      key={task.id}\r\n      task={task}\r\n      clickRemove={props.clickRemove}\r\n      clickFinished={props.clickFinished}\r\n    />\r\n  ));\r\n  const renderPastTasks = props.pastTasks.map((pastTask) => (\r\n    <PastTask\r\n      clickRemove={props.clickRemove}\r\n      key={pastTask.id}\r\n      pastTask={pastTask}\r\n    />\r\n  ));\r\n  return (\r\n    <div className=\"tasks\">\r\n      <div className=\"currentTasks\">\r\n        <h1 className=\"taskTitle\">Zdania do wykonania({props.tasks.length})</h1>\r\n        {renderTasks.length ? (\r\n          renderTasks\r\n        ) : (\r\n          <h2>Dodaj swoje pierwsze zadanie wyżej!</h2>\r\n        )}\r\n      </div>\r\n      <div className=\"pastTasks\">\r\n        <h1 className=\"taskTitle\">Zdania wykonane({props.pastTasks.length})</h1>\r\n        {renderPastTasks.length ? (\r\n          renderPastTasks\r\n        ) : (\r\n          <h2>Nie ukończono jeszcze żadnych zadań</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","const Info = () => {\r\n  return (\r\n    <div id=\"intro\">\r\n      <h1>Lista zadań do wykonania</h1>\r\n      <span>\r\n        Lista przechowuje nazwę, opis zadania oraz datę którą użytkownik ustawi\r\n        na termin wykonania.\r\n      </span>\r\n      <span>\r\n        Po wykonaniu kliknij \"wykonane\" aby przesunąć zadanie do \"zadania\r\n        wykonane\".\r\n      </span>\r\n      <span>\r\n        Jeżeli chcesz usunąć zadania kliknij \"x\" a zniknie ono bez śladu!\r\n      </span>\r\n      <span>Opis zadania jest ograniczony do 100 znaków</span>\r\n      <span>A nazwa do 50</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","const Menu = (props) => {\r\n  const { click } = props;\r\n  return (\r\n    <div className=\"menuSort\">\r\n      <div onClick={(e) => click(\"wszystko\", e.target)}>Wszystko</div>\r\n      <div onClick={(e) => click(\"osobiste\", e.target)}>Osobiste</div>\r\n      <div onClick={(e) => click(\"praca\", e.target)}>Praca</div>\r\n      <div onClick={(e) => click(\"dom\", e.target)}>Dom</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SortBtns = (props) => {\r\n  return (\r\n    <div className=\"sorts\">\r\n      <h3>filtry</h3>\r\n      <button onClick={props.clickImportant}>!</button>\r\n      <button className=\"sortBy\">Kategoria</button>\r\n      <Menu click={props.clickMenu} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortBtns;\r\n","import \"./App.css\";\nimport UserInputs from \"./userInputs\";\nimport Tasks from \"./tasks\";\nimport React, { Component } from \"react\";\nimport Info from \"./info\";\nimport SortBtns from \"./sortBtns\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.counter = 9;\n    this.state = {\n      tasks: [],\n      pastTasks: [],\n      clickImportant: false,\n      currentSort: \"wszystko\",\n    };\n  }\n  handleButtonClick = (name, date, category, important, description) => {\n    const task = {\n      id: this.counter++,\n      name,\n      date,\n      category,\n      important,\n      description,\n    };\n    const tasks = [...this.state.tasks, task];\n    this.setState({ tasks });\n  };\n  componentDidMount() {\n    fetch(\"./initialTasks.json\")\n      .then((response) => response.json())\n      .then((tasks) => this.setState({ tasks }));\n  }\n  removeTask = (name, prev) => {\n    let tasks;\n    if (prev) {\n      tasks = this.state.pastTasks;\n    } else {\n      tasks = this.state.tasks;\n    }\n    const index = tasks.findIndex((el) => name === el.name);\n    tasks.splice(index, 1);\n    if (prev) {\n      this.setState({ pastTasks: tasks });\n    } else {\n      this.setState({ tasks });\n    }\n  };\n  taskFinished = (task) => {\n    const tasks = this.state.tasks;\n    const index = tasks.findIndex((el) => task.name === el.name);\n    const pastTask = tasks.splice(index, 1);\n    let today = new Date().toLocaleString();\n    today = `${today.slice(0, 2)}-${today.slice(3, 5)}-${today.slice(\n      6,\n      8\n    )} ${today.slice(11, 17)}`;\n    pastTask[0].finishDate = today;\n    const pastTasks = [...pastTask, ...this.state.pastTasks];\n    this.setState({ tasks, pastTasks });\n  };\n  handleClickImportant = (e) => {\n    this.setState({ clickImportant: !this.state.clickImportant });\n    e.target.classList.toggle(\"clicked\");\n  };\n  handleMenuClick(currentSort, e) {\n    document\n      .querySelectorAll(\".menuSort div\")\n      .forEach((tab) => tab.classList.remove(\"clicked\"));\n    e.classList.add(\"clicked\");\n    this.setState({ currentSort });\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <SortBtns\n          clickImportant={this.handleClickImportant.bind(this)}\n          clickMenu={this.handleMenuClick.bind(this)}\n        />\n        <Info />\n        <UserInputs\n          tasks={this.state.tasks}\n          click={this.handleButtonClick.bind(this)}\n        />\n        <Tasks\n          important={this.state.clickImportant}\n          currentSort={this.state.currentSort}\n          tasks={this.state.tasks}\n          pastTasks={this.state.pastTasks}\n          clickRemove={this.removeTask.bind(this)}\n          clickFinished={this.taskFinished.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}